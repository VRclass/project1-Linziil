#N canvas 44 65 1636 768 10;
#N canvas 0 50 450 110 (subpatch) 0;
#X array scaleArray 1 float 2;
#X coords 0 24 1 0 100 50 1 0 0;
#X restore 100 115 graph;
#X obj 280 207 r notes;
#X obj 280 286 unpack 0 0;
#X obj 280 346 pack 0 0 0;
#N canvas 0 50 450 278 (subpatch) 0;
#X array notes-from-poly 8 float 2;
#X coords 0 127 8 0 200 140 1 0 0;
#X restore 1004 98 graph;
#X obj 280 427 unpack;
#N canvas 0 50 450 278 (subpatch) 0;
#X array notes-squashed 8 float 3;
#A 0 0 0 0 0 0 0 0 0;
#X coords 0 127 8 0 200 140 1 0 0;
#X restore 1003 280 graph;
#X obj 308 537 s reorder;
#N canvas 133 50 826 891 array-sort 0;
#X obj 263 111 until;
#X obj 263 153 f;
#X obj 296 154 + 1, f 4;
#X msg 321 91 0, f 2;
#X obj 296 21 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 312 267 f;
#X obj 264 232 t f b;
#X obj 262 182 t f f;
#X obj 249 452 f;
#X floatatom 240 515 5 0 0 0 - - -, f 5;
#X obj 306 399 sel 1;
#X obj 214 485 f;
#X obj 173 537 f;
#X obj 213 553 t b b;
#X obj 323 560 t b f;
#X obj 250 580 f;
#X obj 343 -90 until;
#X obj 344 -46 f;
#X obj 376 -47 + 1, f 4;
#X msg 401 -110 0, f 2;
#X obj 345 -139 t b b;
#X obj 329 -11 t b f;
#X obj 214 -206 r reorder;
#X obj 252 48 t b b b b;
#X msg 314 585 0, f 2;
#X msg 357 89 0;
#X obj 217 333 expr if ($f1 > $f2 \, $f1 \, $f2) \; if ($f1 > $f2 \,
1 \, 0);
#X msg 344 -115 8, f 2;
#X msg 263 83 8, f 2;
#X obj 170 -206 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 264 210 tabread notes-squashed;
#X obj 314 621 tabwrite notes-squashed;
#X obj 139 648 tabwrite notes-decreasing;
#X text 419 137 sort array a into b. a gets clobbered in the process
probably a much better way to do this ...;
#X obj 204 -173 t b b b;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 7 0;
#X connect 2 0 1 1;
#X connect 3 0 1 1;
#X connect 4 0 23 0;
#X connect 5 0 26 1;
#X connect 6 0 26 0;
#X connect 6 1 5 0;
#X connect 7 0 30 0;
#X connect 7 1 8 1;
#X connect 8 0 11 1;
#X connect 9 0 14 0;
#X connect 10 0 8 0;
#X connect 11 0 9 0;
#X connect 11 0 13 0;
#X connect 12 0 32 0;
#X connect 13 0 12 0;
#X connect 13 1 15 0;
#X connect 14 0 24 0;
#X connect 14 1 31 1;
#X connect 15 0 32 1;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 17 0 21 0;
#X connect 18 0 17 1;
#X connect 19 0 17 1;
#X connect 20 0 27 0;
#X connect 20 1 19 0;
#X connect 21 0 4 0;
#X connect 21 1 15 1;
#X connect 22 0 34 0;
#X connect 23 0 11 0;
#X connect 23 1 28 0;
#X connect 23 2 3 0;
#X connect 23 3 25 0;
#X connect 24 0 31 0;
#X connect 25 0 5 1;
#X connect 26 0 5 1;
#X connect 26 0 12 1;
#X connect 26 1 10 0;
#X connect 27 0 16 0;
#X connect 28 0 0 0;
#X connect 29 0 34 0;
#X connect 30 0 6 0;
#X connect 34 2 20 0;
#X restore 885 514 pd array-sort;
#X text 1245 161 array1 is raw data from poly (notes with 0 velocity
are given 0 pitch);
#X text 1220 535 here are the notes sorted...;
#X floatatom 651 695 5 0 0 0 - - -, f 5;
#N canvas 0 50 450 278 (subpatch) 0;
#X array notes-decreasing 8 float 2;
#X coords 0 127 8 0 200 140 1 0 0;
#X restore 1004 473 graph;
#N canvas 280 62 726 731 increasing 0;
#X obj 156 260 until;
#X obj 157 304 f;
#X obj 189 303 + 1, f 4;
#X msg 214 240 0, f 2;
#X obj 155 236 f 0;
#X obj 156 357 - 0;
#X obj 157 408 abs;
#X obj 157 326 t f f;
#X obj 266 471 f;
#X obj 156 469 t f b;
#X obj 320 197 r num-down;
#X obj 156 379 + 1;
#X obj 416 331 until;
#X obj 416 373 f;
#X obj 449 374 + 1, f 4;
#X msg 474 311 0, f 2;
#X obj 416 276 t b b;
#X obj 424 398 t b f;
#X msg 415 423 0, f 2;
#X msg 416 303 8, f 2;
#X obj 155 197 t b b b;
#X obj 156 437 tabread notes-decreasing;
#X obj 153 67 inlet;
#X obj 413 448 tabwrite scaleArray;
#X obj 152 528 tabwrite scaleArray;
#X obj 156 489 - 60;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 7 0;
#X connect 2 0 1 1;
#X connect 3 0 1 1;
#X connect 4 0 0 0;
#X connect 5 0 11 0;
#X connect 6 0 21 0;
#X connect 7 0 5 0;
#X connect 7 1 8 1;
#X connect 8 0 24 1;
#X connect 9 0 25 0;
#X connect 9 1 8 0;
#X connect 10 0 4 1;
#X connect 10 0 5 1;
#X connect 11 0 6 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 13 0 17 0;
#X connect 14 0 13 1;
#X connect 15 0 13 1;
#X connect 16 0 19 0;
#X connect 16 1 15 0;
#X connect 17 0 18 0;
#X connect 17 1 23 1;
#X connect 18 0 23 0;
#X connect 19 0 12 0;
#X connect 20 0 4 0;
#X connect 20 1 3 0;
#X connect 20 2 16 0;
#X connect 21 0 9 0;
#X connect 22 0 20 0;
#X connect 25 0 24 0;
#X restore 1015 697 pd increasing;
#X obj 651 721 s num-down;
#X obj 280 311 poly 8 1, f 10;
#X obj 241 537 s others;
#N canvas 9 50 588 574 format_for_array 0;
#X obj 111 44 inlet;
#X obj 102 128 f;
#X obj 144 151 sel 0;
#X msg 121 188 0;
#X obj 167 181 t b b;
#X obj 137 126 f;
#X obj 79 268 t f b;
#X obj 75 336 pack 0 0;
#X obj 85 75 unpack 0 0 0;
#X obj 41 132 t b f;
#X obj 117 304 f;
#X obj 78 389 outlet;
#X obj 133 274 - 1;
#X text 169 280 array index starts at 0 \, poly index starts at 1;
#X text 223 150 if the velocity is > 0 \, outputs note number. If =
0 \, it outputs 0 for note number;
#X connect 0 0 8 0;
#X connect 1 0 6 0;
#X connect 2 0 3 0;
#X connect 2 1 4 0;
#X connect 3 0 6 0;
#X connect 4 0 1 0;
#X connect 5 0 2 0;
#X connect 6 0 7 0;
#X connect 6 1 10 0;
#X connect 7 0 11 0;
#X connect 8 0 9 0;
#X connect 8 1 1 1;
#X connect 8 2 5 1;
#X connect 9 0 5 0;
#X connect 9 1 12 0;
#X connect 10 0 7 1;
#X connect 12 0 10 1;
#X restore 280 375 pd format_for_array;
#N canvas 7 50 1000 647 array-copy 0;
#X obj 228 194 until;
#X obj 228 236 f;
#X obj 261 237 + 1, f 4;
#X msg 286 174 0, f 2;
#X obj 227 98 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 406 272 until;
#X obj 406 314 f;
#X obj 439 315 + 1, f 4;
#X msg 464 252 0, f 2;
#X obj 406 217 t b b;
#X obj 414 339 t b f;
#X msg 405 364 0, f 2;
#X obj 227 121 t b b b;
#X msg 228 166 8, f 2;
#X msg 406 244 8, f 2;
#X text 324 97 this removes 0 elements (or actually just moves the
following elements over 1 place);
#X text 508 296 first zero out the destination array;
#X obj 228 258 t f f;
#X obj 227 75 r copy;
#X obj 408 385 tabwrite notes-squashed;
#X obj 229 297 tabread notes-from-poly;
#X obj 247 410 tabwrite notes-squashed;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 17 0;
#X connect 2 0 1 1;
#X connect 3 0 1 1;
#X connect 4 0 12 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 0 10 0;
#X connect 7 0 6 1;
#X connect 8 0 6 1;
#X connect 9 0 14 0;
#X connect 9 1 8 0;
#X connect 10 0 11 0;
#X connect 10 1 19 1;
#X connect 11 0 19 0;
#X connect 12 0 13 0;
#X connect 12 1 3 0;
#X connect 12 2 9 0;
#X connect 13 0 0 0;
#X connect 14 0 5 0;
#X connect 17 0 20 0;
#X connect 17 1 21 1;
#X connect 18 0 4 0;
#X connect 20 0 21 0;
#X restore 882 338 pd array-copy;
#X obj 383 537 s copy;
#X obj 515 537 tabwrite notes-from-poly;
#X text 1230 335 array squash pulls out 0 notes. this array gets clobbered
by the sorting function so it always looks blank;
#X obj 280 456 t b b b b f, f 34;
#N canvas 838 129 533 527 countnotes 0;
#X obj 104 289 > 0;
#X obj 104 316 sel 1;
#X obj 158 352 + 1, f 4;
#X obj 110 353 f 0;
#X obj 141 130 until;
#X obj 142 174 f;
#X obj 174 173 + 1, f 4;
#X msg 319 198 0, f 2;
#X msg 142 105 8, f 2;
#X obj 143 35 r countem;
#X obj 89 395 f 0;
#X obj 89 458 outlet;
#X obj 83 200 t f f;
#X obj 36 244 sel 7;
#X obj 30 313 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 106 234 tabread notes-from-poly;
#X obj 143 81 t b b;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 2 0 3 1;
#X connect 2 0 10 1;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 5 0 12 0;
#X connect 6 0 5 1;
#X connect 7 0 5 1;
#X connect 7 0 3 1;
#X connect 7 0 10 1;
#X connect 8 0 4 0;
#X connect 9 0 16 0;
#X connect 10 0 11 0;
#X connect 12 0 13 0;
#X connect 12 1 15 0;
#X connect 13 0 10 0;
#X connect 14 0 10 0;
#X connect 15 0 0 0;
#X connect 16 0 8 0;
#X connect 16 1 7 0;
#X restore 651 669 pd countnotes;
#X obj 1013 667 r others;
#X obj 437 537 s countem;
#X text 223 52 notes are put into an array and then sorted in increasing
/ decreasing order. the 'arp' subpatch then counts through the arrays
in various patterns;
#X text 226 112 the arp notes are sent out ch 2 (because Organelle
sends key presses on ch 1 by default);
#X obj 732 356 r num-down;
#X obj 721 603 array size scaleArray;
#X obj 280 246 latch-notes;
#X text 73 175 increasing note order;
#X text 1129 676 notes are sorted to increasing order in scaleArray
;
#X connect 1 0 30 0;
#X connect 2 0 15 0;
#X connect 2 1 15 1;
#X connect 3 0 17 0;
#X connect 5 0 22 0;
#X connect 5 1 20 1;
#X connect 11 0 14 0;
#X connect 15 0 3 0;
#X connect 15 1 3 1;
#X connect 15 2 3 2;
#X connect 17 0 5 0;
#X connect 22 0 16 0;
#X connect 22 1 7 0;
#X connect 22 2 19 0;
#X connect 22 3 25 0;
#X connect 22 4 20 0;
#X connect 23 0 11 0;
#X connect 24 0 13 0;
#X connect 28 0 29 0;
#X connect 30 0 2 0;
#X coords 0 -1 1 1 100 65 2 100 100;
